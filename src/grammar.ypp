%{
#include <iostream>
#include "Makefile/Options.hpp"

extern "C"
{
	int yyparse();
    int yylex();

    int yywrap()
    {
        return 1;
    }

	void yyerror(const char* str)
	{
		fprintf(stderr, "error: %s\n", str);
	}
}

%}

%union
{
	char string[100];
	int integer;
	void* pointer;
	char* charPointer;
}

%token T_OPTION
%token T_TARGET
%token T_SET
%token T_ADD
%token T_EDIT
%token T_RM
%token T_END
%token <string> T_LIST
%token <string> T_NAME
%token <string> T_VALUE

/*%type configurations
%type configuration
%type option_list
%type option_command
%type option_set
%type option
%type end
*/
%start configurations

%%

configurations: /* empty */
			  | end
			  | configurations configuration

end: T_END
   {
		std::cout << "Bye Bye!" << std::endl;
		exit(0);
   }

configuration:/* target
			 |*/ option

option: T_OPTION option_command
	  {
		std::cout << "Option selected" << std::endl;
	  }

option_command: option_set
			  | option_list

option_list: T_LIST
		   {
				std::cout << "Debug\t: " << Makefile::Options::currentOptions().getDebug() << std::endl;
				std::cout << "Verbose\t: " << Makefile::Options::currentOptions().getVerbose() << std::endl;
		   }

option_set: T_SET
		  {
		  }
/*
target:	T_TARGET target_command

target_command: add
			  | edit
			  | rm
			  | list
*/
%%

