# Test file for GMG projects

# Global configuration
config set debug false
config set debug true
config set verbose 1
config set verbose 0

config add include path "/usr/local/include/"
config add library path "/usr/local/lib/"
config add library "boost-regex"

config list
config show

#Configure tools
tool add "CXX11" "CXX11FLAGS"
	reset flags
	add flag "--std=gnu++11"
	add flag "-W"
	add flag "-Wall"

	reset debug flags
	add debug flag "-g3"
	add debug flag "-gdwarf-2"

	set verbose flag "-v"
	set optimization flag "-O3"

	set linux path "/usr/local/gcc/4.7/bin/x86_64-linux-linux-g++"

	reset file patterns
	add file pattern ".cpp"
	add file pattern ".cxx"
end

tool edit "CXX"
	reset file patterns
	add file pattern ".cxx"
	rm file pattern ".cpp"

	set optimization flag "-O3"
	set Linux path "/usr/local/gcc/4.7/bin/x86_64-linux-linux-g++"
	set flag name "CXXFLAGS"
end

tool add "CPP" "CPPFLAGS"
	reset debug flags
	add debug flag "-Wall"

	set verbose flag "-v"

	add file pattern ".cpp"

	set optimization flag "-O3"
	set Linux path "/usr/local/gcc/4.7/bin/x86_64-linux-linux-g++"
	set flag name "CPPFLAGS"
end


tool list

# Configure targets
target add "Library"
	set type lib
	set version 1.134

	add module "web"

	add tool "CXX"
		set optimization mode on
	end

	add tool "CPP"
		set optimization mode on
	end
end

target add "Program"
	set type Application
	set version 3.0

	config set verbose true

	add module "GUI"
	add module "helpers/web"
	add module "junk"
	rm module "junk"
	remove module "GUI"

	add dependency "Library"

	add tool "CPP"
		set optimization mode on
	end

	rm tool "CPP"
end

target add "Tester"
	set type unitTest
	set version 0.1

	config add include path "/path/to/unit/test/library/include"
	config add library path "/path/to/unit/test/library/lib"
	config add library "unitTester"

	add module "helpers"
end

targets list

exit # Not very useful as <<EOF>> follows, and do the same
